version: '3.9'

services:

  nexus:
    image: sonatype/nexus3
    ports:
      - "8081:8081"
    volumes:
      - "nexus-data:/nexus-data"
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      KC_DB_URL_HOST: "keycloak-db"
      KC_DB: "postgres"
      KC_DB_USERNAME: "keycloak"
      KC_DB_PASSWORD: "password"
    ports:
      - "8080:8080"
    networks:
      - app-network

  user-management:
    build: user management
    restart: always
    ports:
      - "8086:8086"
    networks:
      - app-network

  product-catalog:
    build: product catalog
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - database

  order-management:
    build: order management
    ports:
      - "8083:8083"
    networks:
      - app-network
    depends_on:
      - database
      - nexus

  database:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: sysadm
      POSTGRES_DB: postgres
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data

  keycloak-db:
    image: postgres:latest
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
    networks:
      - app-network
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

  script-db-schema:
    image: postgres:latest
    volumes:
      - ./create_schemas.sh:/create_schemas.sh
      - ./wait-for-postgres.sh:/wait-for-postgres.sh
    depends_on:
      - database
    entrypoint: /bin/sh -c "/wait-for-postgres.sh && /create_schemas.sh"
    command: [ "sleep", "infinity" ]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  nexus-data: {}
  db-data: {}
  keycloak-db-data: {}